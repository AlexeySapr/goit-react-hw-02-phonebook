{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/section/Section.module.css","components/contactFilter/ContactFilter.module.css","components/container/Container.module.css","components/container/Container.js","components/section/Section.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/contactFilter/ContactFilter.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","ContactForm","state","name","number","handleNameChange","event","currentTarget","value","setState","onSubmit","preventDefault","props","handleSubmit","resset","this","contactForm","inputLabel","formInput","type","onChange","pattern","required","formButton","Component","ContactList","contacts","onDeleteContact","contactList","map","contact","contactList__item","contactList__text","contactList__btn","onClick","id","ContactFilter","filterLabel","filterInput","App","initData","filter","isInContacts","normalizedName","toLowerCase","replace","normalizedNumber","console","log","some","addContact","newContact","alert","nanoid","prevState","delContact","contactId","filterChange","normalizedFilter","filteredContacts","includes","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08d26548.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2MAUO\",\"inputLabel\":\"ContactForm_inputLabel__1yseA\",\"formInput\":\"ContactForm_formInput__2Kf62\",\"formButton\":\"ContactForm_formButton__Bq18-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1dCzG\",\"contactList__item\":\"ContactList_contactList__item__31HIv\",\"contactList__text\":\"ContactList_contactList__text__3V64i\",\"contactList__btn\":\"ContactList_contactList__btn__3IIc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2Ke8Y\",\"title\":\"Section_title__YITB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"ContactFilter_filterLabel__3Wd6O\",\"filterInput\":\"ContactFilter_filterInput__2JGa6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__K0Kqc\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.handleSubmit(this.state);\r\n    this.resset();\r\n  };\r\n\r\n  resset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className={s.contactForm}>\r\n        <label className={s.inputLabel}>\r\n          Name\r\n          <input\r\n            className={s.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleNameChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.inputLabel}>\r\n          Number\r\n          <input\r\n            className={s.formInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleNameChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id} className={s.contactList__item}>\r\n          <p className={s.contactList__text}>\r\n            {contact.name}: {contact.number}\r\n          </p>\r\n          <button\r\n            className={s.contactList__btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.filterLabel}>\r\n      Find contacts by name:\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport './App.css';\nimport Container from './components/container/Container';\nimport Section from './components/section/Section';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactList/ContactList';\nimport initData from './tempData/data.json';\nimport ContactFilter from './components/contactFilter/ContactFilter';\n\nclass App extends React.Component {\n  state = {\n    contacts: initData,\n    filter: '',\n  };\n\n  isInContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().replace(/\\s+/g, '');\n    const normalizedNumber = number.replace(/\\D/g, '');\n    console.log(normalizedNumber);\n    return this.state.contacts.some(contact => {\n      return (\n        contact.name.toLowerCase().replace(/\\s+/g, '') === normalizedName ||\n        contact.number.replace(/\\D/g, '') === normalizedNumber\n      );\n    });\n  };\n\n  addContact = newContact => {\n    const { name, number } = newContact;\n\n    if (this.isInContacts(newContact)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  delContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  filterChange = event => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"AppHeader\">Phonebook</h1>\n        <Container>\n          <Section title={'Phonebook'}>\n            <ContactForm handleSubmit={this.addContact} />\n          </Section>\n\n          <Section title={'Contacts'}>\n            <ContactFilter\n              value={this.state.filter}\n              onChange={this.filterChange}\n            />\n            <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={this.delContact}\n            />\n          </Section>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}